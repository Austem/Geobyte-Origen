using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using DotNet.Highcharts;
using DotNet.Highcharts.Enums;
using DotNet.Highcharts.Helpers;
using DotNet.Highcharts.Options;
using System.Drawing;
using System.Data.Linq;
using geologycmcc.Controllers.DataBase;
using geologycmcc.Models.DrillingModels;


namespace geologycmcc.Controllers.Crud
{
    public class CRUDDrilling
    {
        Transacciones tr;

        /*############################################### VIEW GRAFICOS #############################################*/

        //View INDEX - RESUMEN PERFORACION
        public IEnumerable<MResumenPerforacionFY> ResumenPerforacionFY() {
            tr = new Transacciones();
            IEnumerable<MResumenPerforacionFY > resultado = tr.dataResumenPerforacion("SELECT C.PROJECTCODE, SUM(CASE WHEN  C.DEPTH  IS NULL THEN 0.0 ELSE C.DEPTH END)DEPTH, SUM(C.PROF_PROPUESTA)PROF_PROPUESTA FROM COLLAR C WHERE C.FISCAL_YEAR = (SELECT MAX(C2.FISCAL_YEAR) FROM COLLAR C2) AND C.PROJECTCODE NOT IN('PL', 'PLC', 'STOCK') AND C.STATUS NOT IN ('Perdido','Eliminado') GROUP BY C.PROJECTCODE");

            return resultado;
        }


        //View INDEX - RESUMEN BACKLOG
        public IEnumerable<MRFechaMetros> CumulatedDrilling()
        {
            tr = new Transacciones();
            IEnumerable<MRFechaMetros> resultado = tr.fechaMetros("SELECT FECHA,sum(TOTAL) over (order by CAST(FECHA as DATE)) TOTAL FROM (SELECT SUM(ENDDEPTH - STARTDEPTH)TOTAL,CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0) AS DATE) FECHA  FROM COREDRILLINGSTATISTICS C WHERE  PROJECTCODE IN('IN-FILL', 'CP') AND C.HOLEID IN(SELECT HOLEID FROM COLLAR WHERE FISCAL_YEAR = '2019') GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0) )A ORDER BY FECHA ");

            return resultado;


        }
        public IEnumerable<MRFechaMetros> ReleasedDataBase()
        {
            tr = new Transacciones();
            IEnumerable<MRFechaMetros> resultado = tr.fechaMetros("SELECT A.FECHA,ISNULL(sum(B.TOTAL) over (order by CAST(B.FECHA as DATE)),0) TOTAL FROM (SELECT SUM(ENDDEPTH - STARTDEPTH)TOTAL,CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0) AS DATE) FECHA  FROM COREDRILLINGSTATISTICS C WHERE  PROJECTCODE IN('IN-FILL', 'CP') AND C.HOLEID IN(SELECT HOLEID FROM COLLAR WHERE FISCAL_YEAR = '2019') GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0) )A LEFT JOIN  (SELECT SUM(DEPTH)TOTAL, CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(FECHA_VALIDACION AS DATE)), 0) AS DATE) FECHA FROM COLLAR WHERE FISCAL_YEAR = '2019' AND STATUS IN('Modelable', 'Extraible', 'Reproceso', 'Recodificacion', 'Remapeo') AND PROJECTCODE IN('IN-FILL', 'CP') and FECHA_VALIDACION is not null GROUP BY CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(FECHA_VALIDACION AS DATE)), 0) AS DATE))B ON A.FECHA = B.FECHA ORDER BY FECHA");

            return resultado;


        }
        public IEnumerable<MRFechaMetros> PerdidosDataBase()
        {
            tr = new Transacciones();
            IEnumerable<MRFechaMetros> resultado = tr.fechaMetros("SELECT B.FECHA,ISNULL(sum(A.TOTAL) over (order by CAST(A.FECHA as DATE)),0) TOTAL FROM ( SELECT SUM(ENDDEPTH - STARTDEPTH)TOTAL, CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0) AS DATE) FECHA  FROM COREDRILLINGSTATISTICS C WHERE  PROJECTCODE IN('IN-FILL', 'CP') AND C.HOLEID IN(SELECT HOLEID FROM COLLAR WHERE FISCAL_YEAR = '2019') GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0)  )B LEFT JOIN (SELECT SUM(DEPTH)TOTAL, CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(ENDDATE AS DATE)), 0) AS DATE) FECHA FROM COLLAR WHERE FISCAL_YEAR = '2019' AND STATUS IN('Perdido') AND PROJECTCODE IN('IN-FILL', 'CP') GROUP BY CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(ENDDATE AS DATE)), 0) AS DATE))A ON A.FECHA = B.FECHA ORDER BY CAST(B.FECHA AS DATE)");

            return resultado;


        }
        public IEnumerable<MRFechaMetros> NoProcessDataBase()
        {
            tr = new Transacciones();
            IEnumerable<MRFechaMetros> resultado = tr.fechaMetros("SELECT B.FECHA,ISNULL(sum(A.TOTAL) over (order by CAST(A.FECHA as DATE)),0) TOTAL FROM (SELECT SUM(ENDDEPTH - STARTDEPTH)TOTAL, CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0) AS DATE) FECHA  FROM COREDRILLINGSTATISTICS C WHERE  PROJECTCODE IN('IN-FILL', 'CP') AND C.HOLEID IN(SELECT HOLEID FROM COLLAR WHERE FISCAL_YEAR = '2019') GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0))B LEFT JOIN (SELECT SUM(DEPTH - EN_EM_ALL)TOTAL, CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(FECHA_ESQUEMA AS DATE)), 0) AS DATE) FECHA FROM EN_ESQUEMA WHERE HOLEID IN(SELECT HOLEID FROM COLLAR WHERE FISCAL_YEAR = '2019' AND PROJECTCODE IN('IN-FILL', 'CP') AND STATUS not IN('Perdido', 'Propuesto'))  GROUP BY CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(FECHA_ESQUEMA AS DATE)), 0) AS DATE))A  ON B.FECHA = A.FECHA ORDER BY B.FECHA");

            return resultado;


        }
        public IEnumerable<MRFechaMetros> BackLogChemical()
        {
            tr = new Transacciones();
            IEnumerable<MRFechaMetros> resultado = tr.fechaMetros("SELECT c.FECHA,isnull((sum(A.TOTAL) over (order by CAST(A.FECHA as DATE))-ISNULL(sum(B.TOTAL) over (order by CAST(B.FECHA as DATE)),0)),0)TOTAL  FROM(SELECT SUM(ENDDEPTH - STARTDEPTH)TOTAL, CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0) AS DATE) FECHA  FROM COREDRILLINGSTATISTICS C WHERE  PROJECTCODE IN('IN-FILL', 'CP') AND C.HOLEID IN(SELECT HOLEID FROM COLLAR WHERE FISCAL_YEAR = '2019') GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0))c LEFT JOIN  ( SELECT SUM(SAMPTO - SAMPFROM)TOTAL, CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(SENDDATE AS DATE)), 0) AS DATE) FECHA FROM SAMPLE S INNER JOIN SAMPLEDESPATCH SD ON S.SAMPLEID = SD.SAMPLEID INNER JOIN DESPATCHSEND DS ON SD.DESPATCHNO = DS.DESPATCHNO WHERE S.SAMPLETYPE = '2M' AND  DS.ANALYSISSUITE in  ('SUPC_2015', 'OX_2015', 'OX_2017') AND S.HOLEID  IN(SELECT HOLEID FROM COLLAR WHERE FISCAL_YEAR = '2019' AND PROJECTCODE IN('IN-FILL', 'CP')) AND SENDDATE IS NOT NULL GROUP BY CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(SENDDATE AS DATE)), 0) AS DATE))A ON c.FECHA = A.FECHA left JOIN ( SELECT SUM(SAMPTO - SAMPFROM)TOTAL, CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(FECHA_VALIDACION AS DATE)), 0) AS DATE) FECHA FROM SAMPLE S INNER JOIN SAMPLEDETAILS SD ON S.SAMPLEID = SD.SAMPLEID INNER JOIN COLLAR HD  ON HD.HOLEID = S.HOLEID WHERE S.SAMPLETYPE = '2M' AND NAME = 'SA_STATE' AND VALUE = 'Analizada' and S.HOLEID  IN(SELECT HOLEID FROM COLLAR WHERE FISCAL_YEAR = '2019' AND PROJECTCODE IN('IN-FILL', 'CP') AND STATUS IN('Modelable', 'Extraible', 'Reproceso')) GROUP BY CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(FECHA_VALIDACION AS DATE)), 0) AS DATE))B ON A.FECHA = B.FECHA ORDER BY c.FECHA ");

            return resultado;


        }

        public IEnumerable<MRFechaMetros> Recepcionados()
        {
            tr = new Transacciones();
            IEnumerable<MRFechaMetros> resultado = tr.fechaMetros("SELECT B.FECHA,ISNULL(sum(A.TOTAL) over (order by CAST(A.FECHA as DATE)),0) TOTAL FROM (SELECT SUM(ENDDEPTH - STARTDEPTH)TOTAL, CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0) AS DATE) FECHA  FROM COREDRILLINGSTATISTICS C WHERE  PROJECTCODE IN('IN-FILL', 'CP') AND C.HOLEID IN(SELECT HOLEID FROM COLLAR WHERE FISCAL_YEAR = '2019') GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(DRILLINGDATE AS DATE)), 0))B LEFT JOIN  (SELECT SUM(GEOLTO - GEOLFROM)TOTAL, CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(VALUE AS DATE)), 0) AS DATE) FECHA  FROM GEODETAILS C WHERE PROJECTCODE IN('IN-FILL', 'CP') AND C.HOLEID IN(SELECT HOLEID FROM COLLAR WHERE FISCAL_YEAR = '2019') AND NAME = 'BanFechaRecepcion' GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CAST(VALUE AS DATE)), 0) )A ON B.FECHA = A.FECHA ORDER BY B.FECHA ");

            return resultado;

        }

        // Perforacion diaria

        public IEnumerable<PerforacionDiaria> PerforacionDiaria() {

            tr = new Transacciones();
            IEnumerable<PerforacionDiaria> resultado = tr.perforacionDia("SELECT HOLEID,STATUS, PROJECTCODE, DEPTH, PROSPECT,FECHA_COLLAR,HOLEID_PROP, HOLEID_MOD, PROF_PROPUESTA, SR_PROPUESTO, (CASE WHEN AZIMUTH_PROP != null THEN AZIMUTH_PROP ELSE (SELECT  HS2.AZIMUTH FROM HOLESURVEY HS2 WHERE HS2.HOLEID= T.HOLEID AND HS2.SURVTYPE ='PROP') END)AZIMUTH_PROP , (CASE WHEN DIP_PROP != null THEN DIP_PROP ELSE (SELECT  HS3.DIP FROM HOLESURVEY HS3 WHERE HS3.HOLEID= T.HOLEID AND HS3.SURVTYPE ='PROP') END)DIP_PROP, Maquina_Perf,PROP_DDH_M, PROP_ODEX_M, PROP_RC_M, PROP_TLODO_M, FIN_POZO, (CASE WHEN Survey = 1 THEN 1 ELSE CASE WHEN(SELECT MAX(PRIORITY) FROM HOLESURVEY HS WHERE HS.HOLEID = T.HOLEID) =4 then 4 else Survey END END)Survey,(SELECT(CASE WHEN HL.VALUE is null then '' else HL.VALUE end) FROM HOLEDETAILS HL WHERE HL.NAME ='QAQC_SURVEY_DRILLING' AND HL.HOLEID = T.HOLEID)SURVEY_DRILLING, (SELECT(CASE WHEN HL.VALUE is null then '' else HL.VALUE end) FROM HOLEDETAILS HL WHERE HL.NAME ='QAQC_SURVEY' AND HL.HOLEID = T.HOLEID)SURVEY_GEO, (SELECT MAX(GEOLTO) FROM GEODETAILS WHERE HOLEID =T.HOLEID AND NAME ='CANTRECEPCIONBAN') ENTREGADO FROM ( SELECT HOLEID, STATUS, PROJECTCODE, DEPTH, PROSPECT, FECHA_COLLAR, HOLEID_PROP, HOLEID_MOD, PROF_PROPUESTA, SR_PROPUESTO, AZIMUTH_PROP, DIP_PROP, Maquina_Perf, PROP_DDH_M, PROP_ODEX_M, PROP_RC_M, PROP_TLODO_M, FIN_POZO, Survey FROM COLLAR where STATUS IN('En perforacion') AND FISCAL_YEAR >= 2019) T ORDER BY CAST(T.FIN_POZO as DATE) DESC");

            return resultado;
        }

        // Sonda en perforacion


        public IEnumerable<SondaUbicacion> SondaPerforacion() {
            tr = new Transacciones();

            IEnumerable<SondaUbicacion> resultado = tr.perforaciondiasonda("SELECT T.HOLEID, T.FECHA, T.VALUE as SONDA, (CASE WHEN C.DEPTH is null THEN 0 ELSE C.DEPTH END)DEPTH, C.PROF_PROPUESTA, ROUND(C.NORTE_GIS,0)NORTE_GIS, ROUND(C.ESTE_GIS,0)ESTE_GIS FROM (" +
            "SELECT CONVERT(VARCHAR(10), CAST(DRILLINGDATE AS DATE), 103)FECHA, VALUE, HOLEID FROM DRILLINGDETAIL WHERE DRILLINGDATE = ("+
            "case when(SELECT TOP 1 DRILLINGDATE FROM DRILLINGDETAIL WHERE DRILLINGDATE = CAST(GETDATE() as date)) <> '' then CAST(GETDATE() as date) else " +
            "case when(SELECT TOP 1 DRILLINGDATE FROM DRILLINGDETAIL WHERE DRILLINGDATE = CAST(GETDATE() - 1 as date)) <> '' then CAST(GETDATE() - 1 as date) else " +
            "CAST(GETDATE() - 2 as date) end end" +
            ") AND NAME = 'SONDA'" +
            "GROUP BY CAST(DRILLINGDATE AS DATE), VALUE, HOLEID) T" +
            " INNER JOIN COLLAR C ON C.HOLEID = T.HOLEID");

            return resultado;
        }








    }
}